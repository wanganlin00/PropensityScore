# 匹配（Matching）

**倾向评分匹配**根据他们的倾向评分将治疗组中的每个人与对照组中的个体相匹配。对于每个人来说，倾向得分可以直观地视为从一系列协变量（和潜在混杂因素confounding）计算出来的最近治疗的概率。两个人，一个来自治疗组，一个来自对照组，如果他们的倾向评分之间的差异很小，则被认为是匹配的。不匹配的参与者将被丢弃。

[![](images/clipboard-2383062141.png)](https://www.ncbi.nlm.nih.gov/core/lw/2.0/html/tileshop_pmc/tileshop_pmc_inline.html?title=Click%20on%20image%20to%20zoom&p=PMC3&id=8246231_atm-09-09-812-f2.jpg)

## `Matchit::matchit()`

快速且易用

```{r eval=FALSE}
MatchIt::matchit(method = "nearest")
MatchIt::matchit(method = 'optimal')
MatchIt::matchit(method = 'full')
MatchIt::matchit(method = 'quick')
MatchIt::matchit(method = 'genetic')
MatchIt::matchit(method = 'exact')
MatchIt::matchit(method = 'subclass')
```

## `Matching::Match()`

完全控制匹配过程

```{r eval=FALSE}
Matching::Match(Y = ,
                Tr = , 
                X = , 
                estimand = , 
                caliper = , 
                replace = 
                    )
```

## 匹配算法

最近邻匹配

全局匹配

最优匹配

CEM

卡尔玛诺夫斯基（caliper，卡尺）匹配

匹配比例 ratio

## 案例1

```{r}
data(lalonde, package='Matching')
lalonde %>% 
    str()
```

| 变量名    | 描述                        |
|-----------|-----------------------------|
| `age`     | 年龄                        |
| `educ`    | 受教育年限                  |
| `black`   | 分类变量，1为黑人           |
| `hisp`    | 分类变量，1为西班牙裔       |
| `married` | 分类变量，1为已婚           |
| `nodegr`  | 分类变量，1为有高中学历证书 |
| `re74`    | 1974年的收入                |
| `re75`    | 1975年的收入                |
| `re78`    | 1978年的收入                |
| `u74`     | 分类变量，1为1974年收入为零 |
| `u75`     | 分类变量，1为1975年收入为零 |
| `treat`   | 分类变量，1为实验组         |

### 估计倾向得分：暴露建模

```{r}


ps_formula <- treat ~ age + I(age^2) + educ + I(educ^2) + black +
    hisp + married + nodegr + re74  + I(re74^2) + re75 + I(re75^2) + u74 + u75

logit_fit <- glm(formula = ps_formula,
              data = lalonde,
              family = binomial(link = 'logit'))

lalonde$ps <- fitted(logit_fit)
```

### 匹配

```{r}
# 1：1最近邻匹配
set.seed(123)
require(MatchIt)
match.obj <- matchit(ps_formula,data = lalonde,
                     distance = 'logit', 
                     method = "nearest", 
                     replace=FALSE,
                     ratio = 1)
lalonde$ps2 <- match.obj$distance
summary(match.obj$distance)

match.obj 



# add caliper


logit_of_PS <-  -log(1/lalonde$ps - 1) 

# 或者 logit_of_PS <- log(lalonde$ps/(1-lalonde$ps))

.2*sd(logit_of_PS)

set.seed(123)
require(MatchIt)
match.obj <- matchit(ps_formula,data = lalonde,
                     distance = 'logit', 
                     method = "nearest", 
                     replace=FALSE,
                     ratio = 1,
                     caliper = .2*sd(logit_of_PS) )
match.obj 

```

#### 匹配结果

```{r}
match.obj$match.matrix %>% as.data.frame() %>% 
    rownames_to_column(var = "treat_unit") %>% 
    rename(matched_unit = V1) %>% drop_na()

matched.data <- match.data(match.obj)
table(matched.data$subclass)
```

### 平衡诊断

```{r}
# 散点图展示了匹配后实验组和对照组样本倾向值的分布，凸显了分布平衡与不平衡，分布缺乏重合
plot(match.obj,type = "jitter")
```

```{r}
# QQ图 展示了 匹配前（All）匹配后（Matched）的平衡情况
plot(match.obj,type = "QQ")
```

```{r}
# 标准化平衡统计值，Std. Mean Diff.
summary(match.obj,standardize = TRUE)
```

#### tableone

```{r}
# full data

baselineVars <- c("age", "educ", "black", "hisp", "married", 
                  "re74", "re75", "u74", "u75")

library(tableone)
tab1e_full <- CreateTableOne(vars = baselineVars,
                        data = lalonde[1:12], 
                        strata = "treat",
                        includeNA = TRUE,
                        test = TRUE, smd = TRUE)
print(tab1e_full, showAllLevels = FALSE, smd = TRUE, test = TRUE)


# matched data
matched.data <- match.data(match.obj)
tab1e_matched <- CreateTableOne(vars = baselineVars,
                        data = matched.data[1:12], 
                        strata = "treat",
                        includeNA = TRUE,
                        test = TRUE, smd = TRUE)
print(tab1e_matched, showAllLevels = FALSE, smd = TRUE, test = TRUE)
```

可以获得p值来检查平衡：但不建议这样做，基于P值的平衡评估可能会受到样本量的影响

```{r}
smd.res <- ExtractSmd(tab1e_matched)
t(round(smd.res,2))
```

```{r}
require(cobalt)
bal.plot(match.obj,  
         var.name = "distance", 
         which = "both", 
         type = "histogram",  
         mirror = TRUE)
```

```{r}
bal.tab(match.obj, un=TRUE, 
        thresholds = c(m = .1, v=2))
```

```{r}
love.plot(match.obj, binary = "std", abs = T,
          thresholds = c(m = .1))  
```

#### 重叠

```{r}
boxplot(ps ~ treat, data = lalonde, 
        lwd = 2, ylab = 'ps')
stripchart(ps ~ treat, vertical = TRUE, 
           data = lalonde, method = "jitter", 
           add = TRUE, pch = 20, col = 'blue')


plot(match.obj, type = "jitter")
```

```{r}
# 直方图展示了匹配前后倾向值的分布
plot(match.obj, type = "hist")
```

```{r}
require(cobalt)
baltab.res <- bal.tab(x = match.obj, data = lalonde, 
                      treat = lalonde$treat, 
                      disp.v.ratio = TRUE)
baltab.res
```

```{r}
boxplot(ps ~ treat, data = matched.data, 
        lwd = 2, ylab = 'ps', ylim=c(0,1))
stripchart(ps ~ treat, vertical = TRUE, 
           data = matched.data, method = "jitter", 
           add = TRUE, pch = 20, col = 'blue')
abline(h=c(0+0.05,1-0.05), col = "red", lty = 2)
```

### 估计因果效应：结局建模

```{r}
dat <- lalonde |> mutate(
	ate_weight = psa::calculate_ps_weights(treat, ps, estimand = 'ATE'),
	att_weight = psa::calculate_ps_weights(treat, ps, estimand = 'ATT'),
	atc_weight = psa::calculate_ps_weights(treat, ps, estimand = 'ATC'),
	atm_weight = psa::calculate_ps_weights(treat, ps, estimand = 'ATM')
)
match_out <- Matching::Match(Y = dat$re78,
							 Tr = dat$treat,
							 X = dat$ps,
							 caliper = 0.1,
							 replace = FALSE,
							 estimand = 'ATE')
dat_match <- data.frame(treat_ps = dat[match_out$index.treated,]$ps,
						treat_outcome = dat[match_out$index.treated,]$treat,
						control_ps = dat[match_out$index.control,]$ps,
						control_outcome = dat[match_out$index.control,]$treat)
psa::matching_plot(ps = dat$ps,
				   treatment = dat$treat,
				   outcome = dat$re78,
				   index_treated = match_out$index.treated,
				   index_control = match_out$index.control)
```

```{r}
library(granovaGG)
granovagg.ds(dat_match[, c('control_ps', 'treat_ps')],
             main = 'Treatment vs Control', 
             xlab = 'Treatment', 
             ylab = 'Control')
```

相关样本评估图 （**R-granovaGG？**），其中每个点代表一个匹配的对。治疗观测值绘制在 *x* 轴上，对照观测值绘制在 *y* 轴上。垂直于单位线的线上的点表示差值分数的分布。置信区间为紫色，显然没有跨越单位线，表明具有统计学意义的处理效果。

```{r}
matched.data <- match.data(match.obj)

outcome_fit <- glm(re78 ~ treat + age + I(age^2) + educ + I(educ^2) + black +
    hisp + married + nodegr + re74  + I(re74^2) + re75 + I(re75^2) + u74 + u75,
    data = matched.data,
    family = gaussian,)


require(jtools)

# cluster option
summ(outcome_fit, rubust = "HC0", confint = TRUE, digists = 4, 
     cluster = "subclass", model.info = FALSE, 
     model.fit = FALSE, exp = TRUE)
# GEE

# conditional logistic


# bootstrapping
```

#### 计算ATT

为了简化步骤，以当前的结果进行匹配后分析。

```{r}
library("clarify")
set.seed(123)
sim_coefs <- clarify::sim(outcome_fit)
sim_coefs

est <- sim_ame(sim_coefs, var = "treat", subset = treat == 1,
               contrast = "rr" , verbose = F)   # "diff" ,sr, ar

est
summary(est)

# 绘制 ATT
plot(est)
```

### 敏感性分析

```{r}
# 提取匹配后的样本
mData <- match.data(match.obj,group = "all")
mData_trt <- match.data(match.obj,group = "treat")
mData_ctrl <- match.data(match.obj,group = "control")


library(rbounds)
psens(x =mData_trt$re78,
      y =mData_ctrl$re78 ,Gamma = 2,GammaInc = 0.1)

hlsens(x =mData_trt$re78,
      y =mData_ctrl$re78 ,Gamma = 2,GammaInc = 0.1)
```

## matchIt()与Match()

```{r}
matchit.out <- MatchIt::matchit(ps_formula, 
                                data = lalonde,
                                estimand = "ATT" ) #ATC
summary(matchit.out)
```

```{r}
# Same as above but calculate average treatment effect
rr.ate <- Match(Y = lalonde$re78, 
                Tr = lalonde$treat, 
                X = lalonde$ps,
                M = 1,
                ties = FALSE, 
                replace = FALSE, 
                estimand='ATE')
summary(rr.ate) # Here the estimate is ATE
```

## Matching

```{r}
library(Matching)
lalonde_match <- Match(
    Y = lalonde$re78,
    Tr = lalonde$treat,
    X = lalonde$ps,
    M = 1,
    caliper = 0.1,
    replace = TRUE,
    estimand = 'ATE'
)


summary(lalonde_match)

lalonde_match_df <- data.frame(
    treated.ps = lalonde[lalonde_match$index.treated, ]$ps,
    control.ps = lalonde[lalonde_match$index.control, ]$ps,
    treated.y = 1,
    control.y = 0
)
lalonde_match_df <- lalonde_match_df[order(lalonde_match_df$control.ps), ]


rows <- (1:nrow(lalonde_match_df) - 1) %% floor(nrow(lalonde_match_df) / 5) == 0

ggplot(lalonde, aes(x = ps, y = treat)) +
    geom_point(alpha = 0.5) +
    geom_smooth(
        method = glm,
        formula = y ~ x,
        method.args = list(family = binomial(link = 'logit')),
        se = FALSE
    ) +
    xlim(c(0, 1)) +
    xlab('Propensity Score') + ylab('Treatment') +
    geom_segment(
        data = lalonde_match_df,
        aes(
            x = treated.ps,
            xend = control.ps,
            y = treated.y,
            yend = control.y
        ),
        color = 'purple',
        alpha = 0.1
    )
```

匹配后，治疗组和对照组应具有非常相似的特征。可以使用简单的回归模型来估计治疗对结果的影响。

### 一对一匹配ATT

Estimating the treatment effect on the treated (default is ATT)

```{r}
rr_att <- Match(Y = lalonde$re78, 
                Tr = lalonde$treat, 
                X = lalonde$ps,
                M = 1,
                estimand='ATT')
summary(rr_att) # The default estimate is ATT here

rr_att_mb <- psa::MatchBalance(
    df = lalonde,
    formu = ps_formula,
    formu.Y = update.formula(ps_formula, re78 ~ .),
    index.treated = rr_att$index.treated,
    index.control = rr_att$index.control,
    tolerance = 0.25,
    M = 1,
    estimand = 'ATT')
plot(rr_att_mb)
summary(rr_att_mb)
```

### 1:1 匹配ATE

average treatment effect

```{r}
rr.ate <- Match(Y = lalonde$re78, 
                Tr = lalonde$treat, 
                X = lalonde$ps,
                M = 1,
                estimand = 'ATE')
summary(rr.ate)
```

### 1:k 匹配 （ATT）

```{r}
rr2 <- Match(Y = lalonde$re78,      
             Tr = lalonde$treat, 
             X = lalonde$ps,
             M = 1, 
             ties = TRUE, 
             replace = TRUE,
             estimand = 'ATT')
summary(rr2) # The default estimate is ATT here
```

### Genetic Matching

```{r}
attach(lalonde)
X = cbind(age, educ, black, hisp, married, nodegr, u74, u75, re75, re74)

BalanceMat <- cbind(age, educ, black, hisp, married, nodegr, u74, u75, re75, re74,
                    I(re74*re75))
rr.gen <- GenMatch(Tr = lalonde$treat,
                   X = X, 
                   BalanceMatrix = BalanceMat,
                   estimand = 'ATE', 
                   M = 1, 
                   pop.size = 16,
                   print.level = 0)
rr.gen.mout <- Match(Y = lalonde$re78, 
                     Tr = lalonde$treat, 
                     X = lalonde$ps,
                     estimand = 'ATE',
                     Weight.matrix = rr.gen)
summary(rr.gen.mout)
```

```{r}
## Partial exact matching
rr2 <- Matchby(Y = lalonde$re78, 
               Tr = lalonde$treat, 
               X = lalonde$ps, 
               by = factor(lalonde$nodegr),
               print.level = 0)
summary(rr2)
```

```{r}
## Partial exact matching on two covariates
rr3 <- Matchby(Y = lalonde$re78, 
               Tr = lalonde$treat, 
               X = lalonde$ps, 
               by = lalonde[,c('nodegr','married')],
               print.level = 0)
summary(rr3)
```

### `Match()`版

#### 倾向匹配

```{r}
attach(lalonde)
glm_ps <- glm(
    formula = treat ~ age + educ + black + hisp + married + nodegr + re74  + re75,
    family = binomial(link = 'logit')
)

psm1 <- Match(Y=re78,
             Tr = treat,
             X=glm_ps$fitted.values,
             estimand = "ATT",
             M=1,
             replace = TRUE)
summary(psm1)
```

如上所示，使用1对1样本可替代匹配法，实验组平均效应为2624.3，因果效应的标准误为803.19，t值为3.2714，p值为0.0010702\<0.05，表明估计的实验组平均处理效应有统计学差异。

```{r}
psm2 <- Match(Y=re78,
             Tr = treat,
             X=glm_ps$fitted.values,
             estimand = "ATT",
             M=1,
             replace = FALSE)
summary(psm2)
```

#### 平衡诊断

受试者个体同质性，是否随机分配

协变量分布是否平衡，是否重合：

以`age` 为例，实验组匹配前25.816匹配后25.816，对照组匹配前25.054匹配后25.692 ，匹配后实验组与对照组更接近了；T-test p-value \> 0.05 ，表示匹配前后`age` 均值无统计学差异；KS Bootstrap p-value \> 0.05 ，表示匹配前后`age` 分布无统计学差异

```         
***** (V1) age *****                Before Matching          After Matching 

mean   treatment........          25.816             25.816  
mean control..........     25.054            25.692 
std mean diff.........     10.655            1.7342 

mean raw eQQ diff.....    0.94054           0.73837  
med  raw eQQ diff.....          1                 0  
max  raw eQQ diff.....          7                 9   

mean eCDF diff........   0.025364          0.021893  
med  eCDF diff........   0.022193          0.020349  
max  eCDF diff........   0.065177          0.061047   

var ratio (Tr/Co).....     1.0278             1.083  
T-test p-value........    0.26594           0.84975  
KS Bootstrap p-value..      0.526             0.355  
KS Naive p-value......     0.7481           0.54314  
KS Statistic..........   0.065177          0.061047 
```

```{r}
check_balance <- MatchBalance(
    formul = treat ~ age + educ + black + hisp + married + nodegr + re74  + re75,
    match.out = psm1,
    nboots = 1000,data = lalonde
)
```

```{r}
# age 变平衡了
qqplot(lalonde$age[psm1$index.control],lalonde$age[psm1$index.treated])
abline(a=0,b=1)

# re74 更不平衡了
qqplot(lalonde$re74[psm1$index.control],lalonde$re74[psm1$index.treated])
abline(a=0,b=1)
```

```{r}
# # The covariates we want to match on
x <- cbind(age , educ , black , hisp , married , nodegr , re74  , re75)

# The covariates we want to obtain balance on
BalanceMatrix = x
set.seed(100)



# Genetic Matching 自动适配平衡
gen_match <- GenMatch(Tr=treat,
                      X=glm_ps$fitted.values,
                      BalanceMatrix = x,
                      estimand = "ATT")

psM <-  Match(Y=re78,
             Tr = treat,
             X=glm_ps$fitted.values,
             estimand = "ATT",
             Weight.matrix = gen_match,
             replace = TRUE,)
summary(psM)

check_balance2 <- MatchBalance(
    formul = treat ~ age + educ + black + hisp + married + nodegr + re74  + re75,
    match.out = psM,
    nboots = 1000,data = lalonde
)

# age 变平衡了
qqplot(lalonde$age[psM$index.control],lalonde$age[psM$index.treated])
abline(a=0,b=1)

# re74 也变平衡了
qqplot(lalonde$re74[psM$index.control],lalonde$re74[psM$index.treated])
abline(a=0,b=1)
```

#### overlap

#### 共同支持域的查验

```{r}
sum(glm_ps$fitted.values[lalonde$treat==1]> 
        max(glm_ps$fitted.values[lalonde$treat==0]))

sum(glm_ps$fitted.values[lalonde$treat==1]< 
        min(glm_ps$fitted.values[lalonde$treat==0]))
```

丢弃的实验组样本共有4个。185-181

```{r}
attach(lalonde)
summary(psM)
psM_CS <-  Match(Y=re78,
             Tr = treat,
             X=glm_ps$fitted.values,
             estimand = "ATT",
             Weight.matrix = gen_match,
             replace = TRUE,
             CommonSupport = TRUE)
summary(psM_CS)
detach(lalonde)
```

有查验共同支持域的ATT（2330），与无查验共同支持域（2439.3）存在差异，因此必须重新改进倾向值分析。

#### 敏感性分析

```{r}
library(rbounds)
psens(x =lalonde[psM$index.treated,"re78"],
      y =lalonde[psM$index.control,"re78"] ,
      Gamma = 2,
      GammaInc = 0.1)
# psens
```

对`psM（Y=re78）`使用`psens()`进行Wilcoxon 符合秩检验，当τ=1.3，p值就大于0.05了，说明处理发生比为1.3时，就可以改变原先对于处理效应的结论，也就是说，这个隐藏性偏差不必太大就可以改变原来的结论，因此分析结果对隐藏性排除的影响非常敏感，结论不可靠。

对 `psM（Y=re78）`使用Hodges-Lehmann点估计检验法 `hlsens()` ，当τ=1.5，其95%置信区间包含零，说明此时处理效应是无效的。说明处理发生比为1.5时，隐藏性偏差就可以改变原来的结论，因此匹配后的结论不可靠。

```{r}
x = lalonde[psM$index.treated, "re78"]
y = lalonde[psM$index.control, "re78"]
hlsens(x, y,Gamma = 2,GammaInc = 0.1)
```
